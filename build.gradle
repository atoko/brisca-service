plugins {
	id 'org.springframework.boot' version '2.1.6.BUILD-SNAPSHOT'
	id 'org.jetbrains.kotlin.jvm' version '1.3.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.brisca.core'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', 'Greenwich.BUILD-SNAPSHOT')
	swaggerVersion = '0.0.5'
	resilience4jVersion = '0.13.1'
	
}

dependencies {
	implementation  'org.springframework.boot:spring-boot-starter-webflux'
//	implementation  group:'io.netty', name:'netty-tcnative', version:'2.0.0.Final', classifier: ${os.detected.classifier}
	implementation 'org.springframework.boot:spring-boot-starter-security'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation  'com.microsoft.azure:azure-cosmosdb-spring-boot-starter:2.1.6'
//	implementation  'com.microsoft.azure:spring-data-cosmosdb:3.0.0.M1'
//  Wait for v3
//	implementation  group: 'com.microsoft.azure', name: 'azure-cosmosdb', version: '3.0.0-beta-3'
//	implementation  group: 'io.reactivex', name: 'rxjava-reactive-streams', version: '1.2.1'

	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'

	implementation  'io.jsonwebtoken:jjwt-api:0.10.5'
	runtime 'io.jsonwebtoken:jjwt-impl:0.10.5',
			'io.jsonwebtoken:jjwt-jackson:0.10.5'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'io.projectreactor:reactor-test'
	testImplementation("org.junit.jupiter:junit-jupiter:5.4.1")
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

sourceSets {
	main.java.srcDirs += 'src/main/kotlin'
}



test {
	useJUnitPlatform()
	testLogging {
		events("passed", "skipped", "failed")
	}
}